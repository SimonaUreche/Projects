{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simona\\\\OneDrive\\\\Desktop\\\\IS\\\\IS_project\\\\frontend\\\\src\\\\components\\\\transaction-history-page\\\\TransactionHistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent, Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionHistoryPage = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchTransactionHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:8002/api/transaction-history');\n        if (response.data) {\n          setTransactions(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching transaction history:', error);\n      }\n    };\n    fetchTransactionHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    sx: {\n      padding: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          backgroundColor: '#686a6d',\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            color: \"white\",\n            gutterBottom: true,\n            children: \"Istoric Tranzac\\u021Bii\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: \"De la\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: \"C\\u0103tre\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: \"Sum\\u0103\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: transactions.map((transaction, index) => {\n                  let from = '';\n                  let to = '';\n                  let sumaAfisata = '';\n                  if (transaction.id_expeditor === 1) {\n                    from = `${transaction.from_nume} ${transaction.from_prenume}`;\n                    sumaAfisata = `${transaction.suma}`;\n                    to = transaction.id_destinatar === 1 ? `${transaction.to_nume} ${transaction.to_prenume}` : transaction.id_magazin ? `${transaction.magazin_nume}, ${transaction.magazin_adresa}` : `${transaction.to_nume} ${transaction.to_prenume}`;\n                  } else if (transaction.id_destinatar === 1) {\n                    from = `${transaction.from_nume} ${transaction.from_prenume}`;\n                    sumaAfisata = `${transaction.suma}`;\n                    to = `${transaction.to_nume} ${transaction.to_prenume}`;\n                  } else {\n                    from = `${transaction.from_nume} ${transaction.from_prenume}`;\n                    to = transaction.id_magazin ? `${transaction.magazin_nume}, ${transaction.magazin_adresa}` : `${transaction.to_nume} ${transaction.to_prenume}`;\n                    sumaAfisata = `${transaction.suma}`;\n                  }\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: from\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: to\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: sumaAfisata\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: new Date(transaction.data).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionHistoryPage, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionHistoryPage;\nexport default TransactionHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistoryPage\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Table","TableBody","TableCell","TableContainer","TableRow","Paper","axios","jsxDEV","_jsxDEV","TransactionHistoryPage","_s","transactions","setTransactions","fetchTransactionHistory","response","get","data","error","console","container","justifyContent","sx","padding","children","item","xs","sm","backgroundColor","borderRadius","variant","align","color","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","fontWeight","map","transaction","index","from","to","sumaAfisata","id_expeditor","from_nume","from_prenume","suma","id_destinatar","to_nume","to_prenume","id_magazin","magazin_nume","magazin_adresa","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Simona/OneDrive/Desktop/IS/IS_project/frontend/src/components/transaction-history-page/TransactionHistoryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst TransactionHistoryPage = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTransactionHistory = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8002/api/transaction-history');\r\n        if (response.data) {\r\n          setTransactions(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching transaction history:', error);\r\n      }\r\n    };\r\n    fetchTransactionHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" sx={{ padding: 3 }}>\r\n      <Grid item xs={12} sm={8}>\r\n        <Card sx={{ backgroundColor: '#686a6d', borderRadius: 2 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\" align=\"center\" color=\"white\" gutterBottom>\r\n              Istoric Tranzac»õii\r\n            </Typography>\r\n\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <thead>\r\n                  <TableRow>\r\n                    <TableCell sx={{ fontWeight: 'bold' }}>De la</TableCell>\r\n                    <TableCell sx={{ fontWeight: 'bold' }}>CƒÉtre</TableCell>\r\n                    <TableCell sx={{ fontWeight: 'bold' }}>SumƒÉ</TableCell>\r\n                    <TableCell sx={{ fontWeight: 'bold' }}>Data</TableCell>\r\n                  </TableRow>\r\n                </thead>\r\n                <TableBody>\r\n                  {transactions.map((transaction, index) => {\r\n                    let from = '';\r\n                    let to = '';\r\n                    let sumaAfisata = '';\r\n\r\n                    if (transaction.id_expeditor === 1) {\r\n                      from = `${transaction.from_nume} ${transaction.from_prenume}`;\r\n                      sumaAfisata = `${transaction.suma}`;\r\n                      to = transaction.id_destinatar === 1 \r\n                        ? `${transaction.to_nume} ${transaction.to_prenume}`\r\n                        : (transaction.id_magazin ? `${transaction.magazin_nume}, ${transaction.magazin_adresa}` : `${transaction.to_nume} ${transaction.to_prenume}`);\r\n                    } else if (transaction.id_destinatar === 1) {\r\n                      from = `${transaction.from_nume} ${transaction.from_prenume}`;\r\n                      sumaAfisata = `${transaction.suma}`;\r\n                      to = `${transaction.to_nume} ${transaction.to_prenume}`;\r\n                    } else {\r\n                      from = `${transaction.from_nume} ${transaction.from_prenume}`;\r\n                      to = transaction.id_magazin ? `${transaction.magazin_nume}, ${transaction.magazin_adresa}` : `${transaction.to_nume} ${transaction.to_prenume}`;\r\n                      sumaAfisata = `${transaction.suma}`;\r\n                    }\r\n\r\n                    return (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{from}</TableCell>\r\n                        <TableCell>{to}</TableCell>\r\n                        <TableCell>{sumaAfisata}</TableCell>\r\n                        <TableCell>{new Date(transaction.data).toLocaleString()}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TransactionHistoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}