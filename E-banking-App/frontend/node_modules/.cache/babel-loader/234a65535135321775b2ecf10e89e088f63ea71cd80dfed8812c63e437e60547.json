{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simona\\\\OneDrive\\\\Desktop\\\\IS\\\\IS_project\\\\frontend\\\\src\\\\components\\\\transfer-page\\\\TransferPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { TextField, Button, Grid, Typography, Box, Snackbar, Alert, MenuItem } from '@mui/material';\nimport QRCode from 'qrcode';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { BrowserMultiFormatReader } from '@zxing/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransferPage = () => {\n  _s();\n  const [selectedClientId, setSelectedClientId] = useState('');\n  const [clients, setClients] = useState([]);\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [qrData, setQrData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const videoRef = useRef(null);\n  const scannerRef = useRef(null);\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await axios.get('http://localhost:8002/api/clients');\n        setClients(response.data);\n      } catch (error) {\n        console.error('Eroare la obținerea listei de clienți:', error);\n      }\n    };\n    fetchClients();\n    const socket = io('http://localhost:8002');\n    socket.on('transaction_notification', data => {\n      setNotificationMessage(data.message);\n    });\n    return () => socket.disconnect();\n  }, []);\n  const startScanning = () => {\n    if (videoRef.current) {\n      const multiFormatReader = new BrowserMultiFormatReader();\n      scannerRef.current = multiFormatReader;\n      multiFormatReader.decodeFromVideoDevice(null, videoRef.current, (result, error) => {\n        if (result) {\n          handleScan(result.getText());\n        } else if (error) {\n          console.log('No QR code found or error:', error);\n        }\n      }).catch(err => {\n        console.error(\"Error during scanning:\", err);\n      });\n    }\n  };\n  const stopScanning = () => {\n    var _videoRef$current;\n    const stream = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.srcObject;\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n  };\n  useEffect(() => {\n    if (isScanning) {\n      startScanning();\n    } else {\n      stopScanning();\n    }\n    return () => {\n      stopScanning();\n    };\n  }, [isScanning]);\n  const handleClientChange = event => {\n    console.log(event.target.value);\n    setSelectedClientId(event.target.value);\n  };\n  const handleAmountChange = event => {\n    setAmount(event.target.value);\n  };\n  const handleSubmit = async () => {\n    setError('');\n    setNotificationMessage('');\n    if (!selectedClientId || !amount) {\n      setError('Please fill in both fields');\n      return;\n    }\n    const parsedAmount = parseFloat(amount);\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    console.log('Selected Client ID:', selectedClientId);\n    console.log('Amount:', parsedAmount);\n    try {\n      const transferResponse = await axios.post('http://localhost:8002/api/transfer', {\n        clientId: selectedClientId,\n        amount: parsedAmount\n      });\n      console.log('Transfer Response:', transferResponse.data);\n      if (transferResponse.data.success) {\n        setNotificationMessage(`Transfer de ${parsedAmount} RON către client efectuat cu succes!`);\n        setSelectedClientId('');\n        setAmount('');\n      } else {\n        setError(transferResponse.data.error || 'A apărut o eroare la procesarea transferului');\n      }\n    } catch (error) {\n      console.error('Error during transfer:', error);\n      setError('A apărut o eroare la procesarea transferului');\n    }\n  };\n  const generateQrCode = () => {\n    if (selectedClientId && amount) {\n      const data = {\n        clientId: selectedClientId,\n        amount\n      };\n      QRCode.toDataURL(JSON.stringify(data)).then(url => {\n        setQrData(url);\n      }).catch(err => {\n        console.error('Eroare la generarea codului QR:', err);\n        setError('Eroare la generarea codului QR');\n      });\n    } else {\n      setError('Please select a client and enter an amount');\n    }\n  };\n  const handleCloseQrCode = () => {\n    setQrData('');\n  };\n  const handleScan = data => {\n    if (data) {\n      try {\n        const parsedData = JSON.parse(data);\n        if (parsedData.clientId && parsedData.amount) {\n          setSelectedClientId(parsedData.clientId);\n          setAmount(parsedData.amount);\n        } else {\n          setError('QR code is invalid');\n        }\n      } catch (e) {\n        setError('Invalid QR code format');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      margin: '0 auto',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Transfer Sum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"To whom?\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: selectedClientId,\n          onChange: handleClientChange,\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: client.id,\n            children: [client.nume, \" \", client.prenume]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Sum\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: amount,\n          onChange: handleAmountChange,\n          type: \"number\",\n          inputProps: {\n            step: \"0.01\",\n            min: \"0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          onClick: generateQrCode,\n          children: \"Generate QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), qrData && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrData,\n          alt: \"QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCloseQrCode,\n          style: {\n            position: 'absolute',\n            top: '320px',\n            right: '540px',\n            backgroundColor: '#000000',\n            color: '#FFFFFF'\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          fullWidth: true,\n          onClick: () => setIsScanning(!isScanning),\n          children: isScanning ? 'Stop Scanning' : 'Start Scanning'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), isScanning && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"100%\",\n          height: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          fullWidth: true,\n          onClick: handleSubmit,\n          children: \"Confirm Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!notificationMessage,\n      autoHideDuration: 6000,\n      onClose: () => setNotificationMessage(''),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setNotificationMessage(''),\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: notificationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(''),\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(TransferPage, \"oh4vQzfIR3FCNG1s1Nm+J8v8NL8=\");\n_c = TransferPage;\nexport default TransferPage;\nvar _c;\n$RefreshReg$(_c, \"TransferPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TextField","Button","Grid","Typography","Box","Snackbar","Alert","MenuItem","QRCode","axios","io","BrowserMultiFormatReader","jsxDEV","_jsxDEV","TransferPage","_s","selectedClientId","setSelectedClientId","clients","setClients","amount","setAmount","error","setError","notificationMessage","setNotificationMessage","qrData","setQrData","isScanning","setIsScanning","videoRef","scannerRef","fetchClients","response","get","data","console","socket","on","message","disconnect","startScanning","current","multiFormatReader","decodeFromVideoDevice","result","handleScan","getText","log","catch","err","stopScanning","_videoRef$current","stream","srcObject","getTracks","forEach","track","stop","handleClientChange","event","target","value","handleAmountChange","handleSubmit","parsedAmount","parseFloat","isNaN","transferResponse","post","clientId","success","generateQrCode","toDataURL","JSON","stringify","then","url","handleCloseQrCode","parsedData","parse","e","sx","maxWidth","margin","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","select","label","fullWidth","onChange","map","client","id","nume","prenume","type","inputProps","step","min","color","onClick","style","textAlign","src","alt","position","top","right","backgroundColor","ref","width","height","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","_c","$RefreshReg$"],"sources":["C:/Users/Simona/OneDrive/Desktop/IS/IS_project/frontend/src/components/transfer-page/TransferPage.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { TextField, Button, Grid, Typography, Box, Snackbar, Alert, MenuItem } from '@mui/material';\r\nimport QRCode from 'qrcode'; \r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport { BrowserMultiFormatReader } from '@zxing/browser'; \r\n\r\nconst TransferPage = () => {\r\n  const [selectedClientId, setSelectedClientId] = useState('');\r\n  const [clients, setClients] = useState([]);\r\n  const [amount, setAmount] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  const [qrData, setQrData] = useState(''); \r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const videoRef = useRef(null); \r\n  const scannerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8002/api/clients');\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        console.error('Eroare la obținerea listei de clienți:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n\r\n    const socket = io('http://localhost:8002');\r\n    socket.on('transaction_notification', (data) => {\r\n      setNotificationMessage(data.message);\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, []);\r\n\r\n  \r\n  const startScanning = () => {\r\n    if (videoRef.current) {\r\n      const multiFormatReader = new BrowserMultiFormatReader();\r\n      scannerRef.current = multiFormatReader;\r\n  \r\n      multiFormatReader.decodeFromVideoDevice(null, videoRef.current, (result, error) => {\r\n        if (result) {\r\n          handleScan(result.getText());\r\n        } else if (error) {\r\n          console.log('No QR code found or error:', error);\r\n        }\r\n      }).catch((err) => {\r\n        console.error(\"Error during scanning:\", err);\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopScanning = () => {\r\n    const stream = videoRef.current?.srcObject;\r\n  \r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n  };\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (isScanning) {\r\n      startScanning();\r\n    } else {\r\n      stopScanning();\r\n    }\r\n    return () => {\r\n      stopScanning();\r\n    };\r\n  }, [isScanning]);\r\n  \r\n\r\n  const handleClientChange = (event) => {\r\n    console.log(event.target.value);\r\n    setSelectedClientId(event.target.value);\r\n  };\r\n  \r\n\r\n  const handleAmountChange = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setError('');\r\n    setNotificationMessage('');\r\n  \r\n    if (!selectedClientId || !amount) {\r\n      setError('Please fill in both fields');\r\n      return;\r\n    }\r\n  \r\n    const parsedAmount = parseFloat(amount);\r\n  \r\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\r\n      setError('Please enter a valid amount');\r\n      return;\r\n    }\r\n  \r\n    console.log('Selected Client ID:', selectedClientId);\r\n    console.log('Amount:', parsedAmount);\r\n  \r\n    try {\r\n      const transferResponse = await axios.post('http://localhost:8002/api/transfer', {\r\n        clientId: selectedClientId,\r\n        amount: parsedAmount,\r\n      });\r\n  \r\n      console.log('Transfer Response:', transferResponse.data);\r\n  \r\n      if (transferResponse.data.success) {\r\n        setNotificationMessage(`Transfer de ${parsedAmount} RON către client efectuat cu succes!`);\r\n        setSelectedClientId('');\r\n        setAmount('');\r\n      } else {\r\n        setError(transferResponse.data.error || 'A apărut o eroare la procesarea transferului');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during transfer:', error);\r\n      setError('A apărut o eroare la procesarea transferului');\r\n    }\r\n  };\r\n  \r\n\r\n  const generateQrCode = () => {\r\n    if (selectedClientId && amount) {\r\n      const data = {\r\n        clientId: selectedClientId,\r\n        amount,\r\n      };\r\n\r\n      QRCode.toDataURL(JSON.stringify(data))\r\n        .then((url) => {\r\n          setQrData(url); \r\n        })\r\n        .catch((err) => {\r\n          console.error('Eroare la generarea codului QR:', err);\r\n          setError('Eroare la generarea codului QR');\r\n        });\r\n    } else {\r\n      setError('Please select a client and enter an amount');\r\n    }\r\n  };\r\n\r\n\r\n  const handleCloseQrCode = () => {\r\n    setQrData(''); \r\n  };\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      try {\r\n        const parsedData = JSON.parse(data);\r\n        if (parsedData.clientId && parsedData.amount) {\r\n          setSelectedClientId(parsedData.clientId);\r\n          setAmount(parsedData.amount);\r\n        } else {\r\n          setError('QR code is invalid');\r\n        }\r\n      } catch (e) {\r\n        setError('Invalid QR code format');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 600, margin: '0 auto', padding: 2 }}>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Transfer Sum\r\n      </Typography>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"To whom?\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={selectedClientId}\r\n            onChange={handleClientChange}\r\n          >\r\n            {clients.map(client => (\r\n              <MenuItem key={client.id} value={client.id}>\r\n                {client.nume} {client.prenume}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"Sum\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={amount}\r\n            onChange={handleAmountChange}\r\n            type=\"number\"\r\n            inputProps={{ step: \"0.01\", min: \"0\" }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" color=\"primary\" fullWidth onClick={generateQrCode}>\r\n            Generate QR Code\r\n          </Button>\r\n        </Grid>\r\n\r\n        {/* imaginea codului QR și butonul de închidere */}\r\n        {qrData && (\r\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n            <img src={qrData} alt=\"QR Code\" />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleCloseQrCode}\r\n              style={{\r\n                position: 'absolute',\r\n                top: '320px',\r\n                right: '540px',\r\n                backgroundColor: '#000000',\r\n                color: '#FFFFFF',\r\n              }}\r\n            >\r\n              X\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n\r\n        {/* scanare cod QR */}\r\n        <Grid item xs={12}>\r\n          <Button \r\n            variant=\"contained\"\r\n            color=\"secondary\" \r\n            fullWidth\r\n            onClick={() => setIsScanning(!isScanning)}>\r\n            {isScanning ? 'Stop Scanning' : 'Start Scanning'}\r\n          </Button>\r\n        </Grid>\r\n\r\n        {isScanning && (\r\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n            <video ref={videoRef} width=\"100%\" height=\"auto\" />\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            fullWidth\r\n            onClick={handleSubmit}\r\n          >\r\n            Confirm Transfer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={!!notificationMessage}\r\n        autoHideDuration={6000}\r\n        onClose={() => setNotificationMessage('')}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={() => setNotificationMessage('')} severity=\"success\" sx={{ width: '100%' }}>\r\n          {notificationMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar\r\n        open={!!error}\r\n        autoHideDuration={6000}\r\n        onClose={() => setError('')}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n      >\r\n        <Alert onClose={() => setError('')} severity=\"error\" sx={{ width: '100%' }}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TransferPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}